/**

  @helpers
---------------------------------------------------------
  base/_helpers.scss
--------------------------------------------------------

  This partial is for global helper classes only! Don't
  tamper with units or add items that can't be used as
  utilized helper classes

--------------------------------------------------------- */


/* @float-helpers
--------------------------------------------------------
*/

.float-left,
%float-left {
  float: left !important;
}

.float-right,
%float-right {
  float: right !important;
}

.float-none,
%float-none {
  float: none !important;
}


/*
  @hide
---------------------------------------------------------
 */

// The classic, display: none
.is-hidden {
  display: none !important;
  visibility: hidden !important;
}

// Use this if you still need js access to this element
// it's visually hidden but still in the DOM
.is-visually-hidden {
  position: absolute;
  left: -9999%;
  height: 0;
  padding: 0;
  margin: 0;
  opacity: 0;
}

// Responsive hiders
// Min Width @ $small-mobile
@include bp-at-least($small-mobile) {
  .hide__xs {
    display: none;
  }
}

// Min Width @ $mobile
@include bp-at-least($mobile) {
  .hide__sm {
    display: none;
  }
}

// Min Width @ $tablet
@include bp-at-least($tablet) {
  .hide__md {
    display: none;
  }
}

// Min Width @ $small-desktop
@include bp-at-least($small-desktop) {
  .hide__lg {
    display: none;
  }
}

// Min Width @ $desktop
@include bp-at-least($desktop) {
  .hide__xl {
    display: none;
  }
}


/* @border-helpers
--------------------------------------------------------
*/

.border {
  // Positions
  &.top       { border-top-style: solid; }
  &.right     { border-right-style: solid; }
  &.bottom    { border-bottom-style: solid; }
  &.left      { border-left-style: solid; }
  &.all       { border-style: solid; }

  // thicknesses
  &.none      { border-width: u(rem(0)); }
  &.xs        { border-width: u(rem(1)); }
  &.sm        { border-width: u(rem(2)); }
  &.md        { border-width: u(rem(3)); }
  &.lg        { border-width: u(rem(4)); }
  &.xl        { border-width: u(rem(5)); }

  // Palettes
  &.dark      { border-color: $color__black; }
  &.medium    { border-color: $color__grey; }
  &.light     { border-color: $color__grey--light; }
  &.xlight    { border-color: $color__white; }
}


/* @bg-color
--------------------------------------------------------
*/

.bg-color {
  // Palettes
  &.bg-dark   { background-color: $color__black; }
  &.bg-medium { background-color: $color__grey; }
  &.bg-light  { background-color: $color__grey--light; }
  &.bg-xlight { background-color: $color__grey--light; }
  &.bg-none   { background-color: transparent; }
  &.bg-white  { background-color: $color__white; }
}


/* @padding-helpers
--------------------------------------------------------
*/

.shim {
  &.top {
    &.none    { padding-top: 0; }
    &.xs      { padding-top: u(rem($base-unit / .95)); }
    &.sm      { padding-top: u(rem($base-unit / .85)); }
    &.md      { padding-top: u(rem($base-unit / .75)); }
    &.lg      { padding-top: u(rem($base-unit / .65)); }
    &.xl      { padding-top: u(rem($base-unit / .55)); }
    &.xxl     { padding-top: u(rem($base-unit / .45)); }
  }

  &.right {
    &.none    { padding-right: 0; }
    &.xs      { padding-right: u(rem($base-unit / .95)); }
    &.sm      { padding-right: u(rem($base-unit / .85)); }
    &.md      { padding-right: u(rem($base-unit / .75)); }
    &.lg      { padding-right: u(rem($base-unit / .65)); }
    &.xl      { padding-right: u(rem($base-unit / .55)); }
    &.xxl     { padding-right: u(rem($base-unit / .45)); }
  }

  &.bottom {
    &.none    { padding-bottom: 0; }
    &.xs      { padding-bottom: u(rem($base-unit / .95)); }
    &.sm      { padding-bottom: u(rem($base-unit / .85)); }
    &.md      { padding-bottom: u(rem($base-unit / .75)); }
    &.lg      { padding-bottom: u(rem($base-unit / .65)); }
    &.xl      { padding-bottom: u(rem($base-unit / .55)); }
    &.xxl     { padding-bottom: u(rem($base-unit / .45)); }
  }

  &.left {
    &.none    { padding-left: 0; }
    &.xs      { padding-left: u(rem($base-unit / .95)); }
    &.sm      { padding-left: u(rem($base-unit / .85)); }
    &.md      { padding-left: u(rem($base-unit / .75)); }
    &.lg      { padding-left: u(rem($base-unit / .65)); }
    &.xl      { padding-left: u(rem($base-unit / .55)); }
    &.xxl     { padding-left: u(rem($base-unit / .45)); }
  }

  &.all {
    &.none    { padding: 0; }
    &.xs      { padding: u(rem($base-unit / .95)); }
    &.sm      { padding: u(rem($base-unit / .85)); }
    &.md      { padding: u(rem($base-unit / .75)); }
    &.lg      { padding: u(rem($base-unit / .65)); }
    &.xl      { padding: u(rem($base-unit / .55)); }
    &.xxl     { padding: u(rem($base-unit / .45)); }
  }
}


/* @margin-helpers
--------------------------------------------------------
*/

.margin {
  &.top {
    &.none   { margin-top: 0; }
    &.xs     { margin-top: u(rem($base-unit / .95)); }
    &.sm     { margin-top: u(rem($base-unit / .85)); }
    &.md     { margin-top: u(rem($base-unit / .75)); }
    &.lg     { margin-top: u(rem($base-unit / .65)); }
    &.xl     { margin-top: u(rem($base-unit / .55)); }
    &.xxl    { margin-top: u(rem($base-unit / .45)); }
  }

  &.right {
    &.none   { margin-right: 0; }
    &.xs     { margin-right: u(rem($base-unit / .95)); }
    &.sm     { margin-right: u(rem($base-unit / .85)); }
    &.md     { margin-right: u(rem($base-unit / .75)); }
    &.lg     { margin-right: u(rem($base-unit / .65)); }
    &.xl     { margin-right: u(rem($base-unit / .55)); }
    &.xxl    { margin-right: u(rem($base-unit / .45)); }
  }

  &.bottom {
    &.none   { margin-bottom: 0; }
    &.xs     { margin-bottom: u(rem($base-unit / .95)); }
    &.sm     { margin-bottom: u(rem($base-unit / .85)); }
    &.md     { margin-bottom: u(rem($base-unit / .75)); }
    &.lg     { margin-bottom: u(rem($base-unit / .65)); }
    &.xl     { margin-bottom: u(rem($base-unit / .55)); }
    &.xxl    { margin-bottom: u(rem($base-unit / .45)); }
  }

  &.left {
    &.none   { margin-left: 0; }
    &.xs     { margin-left: u(rem($base-unit / .95)); }
    &.sm     { margin-left: u(rem($base-unit / .85)); }
    &.md     { margin-left: u(rem($base-unit / .75)); }
    &.lg     { margin-left: u(rem($base-unit / .65)); }
    &.xl     { margin-left: u(rem($base-unit / .55)); }
    &.xxl    { margin-left: u(rem($base-unit / .45)); }
  }
}


/* @push-pull-helpers
--------------------------------------------------------
*/

.full-bleed {
    margin-right: -$base-unit!important;
    margin-left: -$base-unit!important;

    .islet & {
        margin-right:-($base-unit / 2)!important;
        margin-left: -($base-unit / 2)!important;
    }
}


/* @bg-color-helpers
--------------------------------------------------------
*/

// Mute an object by reducing its opacity.

.muted,
%muted {
    opacity:0.5!important;
    filter:alpha(opacity = 50)!important;
}


/* @clearix
--------------------------------------------------------
*/

.clearfix,
%clearfix {
  @include clearfix();
}


